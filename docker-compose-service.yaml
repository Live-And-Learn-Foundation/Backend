x-common-service: &common-service
  build:
    dockerfile: Dockerfile
  volumes:
     - ./services/:/app
  environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=192.168.1.12
      - DB_PORT=3307
  networks:
    - network-1

services:
  auth:
    <<: *common-service
    build:
      context: ./services/auth
    command: gunicorn --bind 0.0.0.0:9000 --workers 2 --reload  core.wsgi:application
    ports:
      - '9000:9000'
    env_file:
      - ./services/auth/config.env

  student:
    <<: *common-service
    build:
      context: ./services/student
    command: gunicorn --bind 0.0.0.0:9001 --workers 1 core.wsgi:application
    ports:
      - '9001:9001'
    env_file:
      - ./services/student/config.env

  course:
    <<: *common-service
    build:
      context: ./services/course
    command: gunicorn --bind 0.0.0.0:9002 --workers 2 core.wsgi:application
    ports:
      - '9002:9002'
    env_file:
      - ./services/course/config.env

  document:
    <<: *common-service
    build:
      context: ./services/document
    command: gunicorn --bind 0.0.0.0:9003 --workers 2 core.wsgi:application
    ports:
      - '9003:9003'
    env_file:
      - ./services/document/config.env

  department:
    <<: *common-service
    build:
      context: ./services/department
    command: gunicorn --bind 0.0.0.0:9004 --workers 2 --reload  core.wsgi:application
    ports:
      - '9004:9004'
    env_file:
      - ./services/department/config.env

  search:
    build:
      context: ./services/search
      dockerfile: Dockerfile
    volumes:
      - ./services/search:/app/search
    ports:
      - '9005:9005'
    command: python main.py
    networks:
      - network-1

  ontop:
    image: ontop/ontop
    environment:
      ONTOP_ONTOLOGY_FILE: /opt/ontop/input/university-complete.ttl
      ONTOP_MAPPING_FILE: /opt/ontop/input/university-complete.obda
      ONTOP_PROPERTIES_FILE: /opt/ontop/input/university-complete.compose.properties
      ONTOP_CORS_ALLOWED_ORIGINS: "*"
      ONTOP_DEV_MODE: "true"
      ONTOP_LAZY_INIT: "true"
    volumes:
      - ./ontop_input:/opt/ontop/input
      - ./jdbc:/opt/ontop/jdbc
    ports:
      - "9090:8080"
    networks:
      - network-1

  restarter:
    image: docker:cli
    volumes: ["/var/run/docker.sock:/var/run/docker.sock"]
    command: ["/bin/sh", "-c", "while true; do sleep 900; docker restart backend-ontop-1; done"]
    restart: unless-stopped

networks:
  network-1:
    driver: bridge
