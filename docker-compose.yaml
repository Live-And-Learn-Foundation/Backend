services:
  auth:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:9000
    volumes:
      - ./services/auth:/app/auth
    ports:
      - '9000:9000'
    depends_on:
      - mysql
      - redis
      - kong
    env_file:
      - ./services/auth/config.env
    networks:
      - network-1

  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    ports:
      - '3306:${DB_PORT}'
    healthcheck:
      test:
        [
          'CMD',
          'mysql',
          '-h',
          'localhost',
          '-u',
          'root',
          '-p${DB_PASSWORD}',
          '-e',
          'SELECT 1',
        ]
      timeout: 1s
      retries: 20
    networks:
      - network-1

  redis:
    image: 'redis:alpine'
    restart: always
    hostname: redis
    ports:
      - '6379:${REDIS_PORT}'
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping | grep PONG']
      interval: 1s
      timeout: 3s
      retries: 5
    volumes:
      - redis_data:/var/lib/redis
    networks:
      - network-1

  # kong-database:
  #   image: postgres:13
  #   environment:
  #     POSTGRES_USER: kong
  #     POSTGRES_DB: kong
  #     POSTGRES_PASSWORD: kong
  #     POSTGRES_HOST_AUTH_METHOD: trust
  #   volumes:
  #     - kong_data:/var/lib/postgresql/data
  #   ports:
  #     - '5432:5432'
  #   healthcheck:
  #     test: ['CMD-SHELL', 'pg_isready -U kong']
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - network-1

  # kong:
  #   image: kong
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: kong-database
  #     KONG_PG_PASSWORD: kong
  #     KONG_PG_USER: kong
  #     KONG_PG_DATABASE: kong
  #     KONG_CASSANDRA_CONTACT_POINTS: none
  #     KONG_PROXY_ACCESS_LOG: /dev/stdout
  #     KONG_ADMIN_ACCESS_LOG: /dev/stdout
  #     KONG_PROXY_ERROR_LOG: /dev/stderr
  #     KONG_ADMIN_ERROR_LOG: /dev/stderr
  #     KONG_ADMIN_LISTEN: 0.0.0.0:8001
  #     KONG_MANAGER_LISTEN: 0.0.0.0:8002
  #     KONG_LICENSE_DATA: '<your_kong_license>' # If using a licensed version
  #   ports:
  #     - '8000:8000' # Proxy port
  #     - '8001:8001' # Admin API
  #     - '8002:8002' # Kong Manager
  #   depends_on:
  #     kong-database:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ['CMD', 'kong', 'health']
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - network-1

volumes:
  mysql_data:
  redis_data:
  kong_data:

networks:
  network-1:
    driver: bridge
