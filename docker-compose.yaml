services:
  auth:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./Backend:/app/Backend
    ports:
      - '8000:8000'
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - network

  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./docker_volume/mysql_data:/var/lib/mysql
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - '3306:${DB_PORT}'
    healthcheck:
      test:
        [
          'CMD',
          'mysql',
          '-h',
          'localhost',
          '-u',
          'root',
          '-p${DB_PASSWORD}',
          '-e',
          'SELECT 1',
        ]
      timeout: 1s
      retries: 20
    networks:
      - network

  redis:
    image: 'redis:alpine'
    restart: always
    hostname: redis
    ports:
      - '6379:${REDIS_PORT}'
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping | grep PONG']
      interval: 1s
      timeout: 3s
      retries: 5
    volumes:
      - ./docker_volume/redis-data:/var/lib/redis
    networks:
      - network

volumes:
  mysql_data:
  redis-data:

networks:
  network:
